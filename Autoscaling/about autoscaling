If you know EC2 and cloudwatch  you will understand Autoscaling easily

=>Auto Scaling is a service that automatically monitors and 
adjusts compute resources to maintain performance for 
applications hosted in the AWS.

=>Alarm monitors CloudWatch metrics for Instance

Note:

=>Autoscaling group integrate with cloudwatch it monitor resources on particular metric you have selected.
cpu usage

eg: cpu reaches a particular threshold  ==> it can adjust the capacity based on cloud watch alarm(increase / descrease vm's)

=>while creating autoscaling group you also have to create cloudwatch alarms to add/remove capacity 

adding capacity:  to maintain performance
removing : to maintain cost

A launch configuration/Template 
----------------------------------
=>is an instance configuration template that an 
Auto Scaling group uses to launch EC2 instances.


Scaling policy:: 
-----------------
=>is used to increase and decrease the number of 
running instances in the group dynamically to meet changing 
conditions.

step 
scaling 

cpu >60   --> add 2 instance
cpu >80 --> add 4 instances


============================================ Image craeation =======================================

Install apache2 using "user data" on Vm instance > first create istance --> install httpd and all below 
create image from that VM and use image on "Autoscaling launch configuration"

#!/bin/bash
yum update -y
yum install -y httpd.x86_64
systemctl start httpd.service
systemctl enable httpd.service
echo “Hello World from $(hostname -f)” > /var/www/html/index.html


create ec2 instance using above user data and ----> using VM create a "image"
use the image in launch configuration.

Flow diagram:
-------------
Autoscaling group ( launch template/launch configuration ) --> alarm (cloudwatch) --> scaling policy --> instances

launch configuration: 
-------------------

Give image above created from ec2 instgance and create autoscaling.

======================================== hands on AUTOSCALING========================================

1. Create target group with 0 instances
2. Create LB
3. create launch configuration
4. create autoscaling

1. Create target group:
==========================

Choose a target type:  Instances
Target group name:  dataweave-target
protocol: http
port: 80
vpc: default
Protocol version: http1

Health checks:

Health check protocol: http
Health check path: /             (here / like <ip>:80/) if you need other path from / you can mention <ip>:80/var/www/ -->mention like /var/www/

Advanced health check settings
set as default 

Next ---> create Target group


2. Create LB
=============

click on "application loadbalancer"

Load balancer name:  dataweave-alb
Mappings:  (select all zone for HA)

Security groups:
---------------
create a Sg          -> "alb-sg"
open port: HTTP          80    for     anywhere 0.0.0.0/0          --> Need to access everyone so 0.0.0.0/0

Listeners and routing: 
-----------------------
Protocol :HTTP
port: 80
Default action: (Forward to) --> dataweave-tg (target group)

Create LB


3. create launch configuration
===============================
Launch configuration name : Dataweave-lconfig
Amazon machine image (AMI): ubuntu 
Instance type :             t2.micro

Security groups: 
       SSH 22 MYIP
       HTTP   80  from alb-sg  (security group of ALB)   # need to add here  Ec2 instance in order to access from LB. 
       HTTP   80 MYIP

select keypair --> acknowledge --> launch configuation


4. create autoscaling group:
=============================
Auto Scaling group name: dataweave-asg
swtich to launch config:  Dataweave-lconfig

Next

VPC: select
AZ: select few for HA

Next

attach to existing lb --> Choose from your load balancer target groups
Existing load balancer target groups --> "dataweave-target"

Health checks - optional:
click on ELB

NEXT

Group size - optional
Desired capacity : 2
Minimum capacity : 1
Maximum capacity: 4

Scaling policies - optional: 
===========================
Target tracking scaling policy :

Metric type: avg cpu utilisation >50 

NEXT

Add notification:
================

create sns topic


NEXT

NExt

create autoscaling sg


============================= Validate =====================================

Check in ASG:
-------------
instance management ( both are inservice ( up ) or not )

check in tragets all vm's in lb are healty or not 

if not check security group

check lb dns it redirect to 2 vm index.html or not 

connect 2 vm's and copy for easy understanding of lb working or not

vm1:
echo "hello vnd" >> /var/www/html/index.html

vm2:
echo "hello dataweave" >> /var/www/html/index.html

-->
Hit lb url it redirect to 2 html files ( instances ) or not



========================= How to check autoscaling working proper or not =================================

Install stress on 1 vm

#Amazon Linux 2
sudo amazon-linux-extras install epel -y
sudo yum install stress -y

INCREASE CPU LOAD AND CHECK IN "CLOUD WATCH" ----> IN ALARM STATE ( HIGH CPU LOAD) 

load increase command in VM:

dd if=/dev/zero of=/dev/null

it will create the nodes up to maximum mentioned in scaling group ,check in ASG and Target group of ALB.
























